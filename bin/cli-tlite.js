#!/usr/bin/env node
import e from"readline";import t from"path";import a from"fs";import r from"os";import{execSync as i,spawnSync as s}from"child_process";import{database as n}from"liburno_lib";const o="[0m",l="[1m",c="[31m",$="[32m",p="[33m",f=`${o}${l}Tlite${o} (c) Croswil 2024.1.2`;var u=e=>{"darwin"==process.platform?s("pbcopy",{input:e}):s("xsel",["--clipboard","--input"],{input:e})};function d(){var e="/etc/nginx/sites-available";if(a.existsSync(e)){var r=a.readdirSync(e);for(var i of r)if(i.length>0&&"default"!=i){var s=a.readFileSync(t.join(e,i)).toString(),n=/server_name\s*(.*);/gim.exec(s),c=[];if(n)for(;;){var p=/localhost:(\d+)/gim.exec(s);if(!p)break;c.push(p[1]),s=s.slice(p.index+8)}S.write(`${l}${n[1]}:${o} ${$}${c.join(" ")}${o}\n`)}}else S.write(`Folder: ${$}"${e}" ${o} not found!\n`);process.exit(0)}var h=null,m="",b=!1,v=!1,y=!1,w=(e=!1)=>{if(m)try{return h||(h=n.db(m)),!0}catch(e){}else h=null,e||S.write(`${c}..missing db..${o}\n`);return!1};function g(e){Array.isArray(e)&&(e=e.join(" "));var i,s=t.parse(m);return s&&s.dir?((i=j.outdir?j.outdir:t.join(s?.dir,"out")).startsWith("~")&&(i=t.resolve(r.homedir(),i.slice(2))),a.existsSync(i)||a.mkdirSync(i,!0),e?t.join(i,e):t.join(i,s.name+"_db")):e||"out"}var S=process.stdout;const x=e.createInterface({input:process.stdin,output:S,prompt:"TL> "});var j={data:[],short:!0,outdir:"",history:[]},k=".lasts.tlite";if(a.existsSync(k)){var O=JSON.parse(a.readFileSync(k));O&&O.data&&Array.isArray(O.data)&&(j=O)}var F=(e,t,a)=>{var r=[];(i=/(\[[^\]]*\])/gim.exec(t))&&(t=t.substr(0,i.index),r=JSON.parse(i[1])),t.startsWith("e ")&&(t="explain query plan "+t.substr(2)),t.indexOf(" limit")<1&&(t+=" limit 20");var i=e.prepare(t).all(...r);if(a&&i?.length>0){var s=[];for(var n of i){var l=[];for(var p in n)l.push(n[p]);s.push(l.join("\t"))}u(s.join("\n"))}var f=[],d=[];if(!(i&&i.length>0))return!0;for(var n in i[0])f.push(n);for(var n of(process.stdout.write(`${$}${f.join(",")}${o}\n`),i)){for(var h of(d=[],f)){var m=n[h];j.short&&"string"==typeof m&&m.length>20&&(m.startsWith("{")||m.startsWith("["))&&(m=`${c}JSON${o}`),d.push(m)}process.stdout.write(`${d.join(",")}\n`)}return!1},q=()=>{var e=h.databases();for(var t of e)S.write(`${p}${t.name}: ${l}${t.file}${o}\n`)},N=(e,t,a)=>{if(J=!1,e.length>1&&"!"==e[e.length-1]&&(e=e.substr(0,e.length-1)),w())try{if(t){var r=n.splitsql(e),i=[];for(var s of r){var l=h.tabledef(s,!0);l&&(process.stdout.write(l+"\n"),i.push(l),h.run(l))}u(i.join("\n"))}else{var $;if(($=/^\s*(select|insert|delete|update|e)\s+/i.test(e)?[e]:n.splitsql(e)).length>1||$[0].includes("\n")){for(var p=0;p<$.length;p++)$[p]=$[p].split("\n").filter((e=>e.trim())).join("\n");u(["!",...$,"!"].join("\n"))}else u($.join("\n"));for(var f of $){if(f=f.trim(),/^\s*(select|e)\s+/i.test(f))return F(h,f,a);if(f.trim()){var d=[];(r=/(\[[^\]]*\])/gim.exec(f))&&(f=f.substr(0,r.index),d=JSON.parse(r[1])),h.run(f,...d)}}}}catch(e){process.stdout.write(`${c}${e}${o}\n`)}},J=!1,_="",A=async e=>{if(y)e=parseInt(e),y=!1,e>0&&e<=j.data.length&&await A(`use ${j.data[e-1]}`);else if(b)("!"==(_+="\n"+e)[_.length-1]||";"==_[_.length-1]&&0==J)&&(N(_,v),v=!1,_="",b=!1);else{e||(e="");var f=e.split(" "),O=f.splice(0,1);O=O&&O[0]?O[0].toLowerCase():"";var L=f.join(" ");L||(L="");var z=O.split(";")[0];switch(z.startsWith(".")&&(O=z.substr(1),z="."),z){case"q":case"quit":E();case"h":case"help":case"?":S.write(`${o}Help comandi ${l}Tlite${o}:\n${l}h, help,?${o}Documentazione delle funzioni di sistema\n${l}use[file]          ${o}Mostra / Imposta il database in uso\n${l}close, chiudi      ${o}Chiudi il database corrente\n${l}last, db, lastdb   ${o}Mostra l'elenco degli ultimi db utilizzati\n${l}jshort[1, 0]       ${o}Imposta la visualizzazione record json(1 = full, 0 no)\n${l}outdir <folder>    ${o}Imposta la cartella di output per esportazioni(.per default )\n${l}schema[d][table]   ${o}Mostra sql con la creazione del database / Tabella\n${l}attach <file> <nn> ${o}Collega un database, con il nome <nn>, o  mostra l'elenco dei db. collegati\n${l}detach <nn>        ${o}Scollega il database collegato\n${l}tables/tabelle     ${o}Mostra le tabelle di un DB\n${l}fields <table>     ${o}Mostra i campi di una tabella (usare anche campi <table>)\n${l}yaml <table>       ${o}Mostra struttura database/tabella in formato YAML\n${l}xexp <file> [table]${o}Esporta in formato XLSX una tabella,query o l'intero database (non inserire suffisso)\n${l}exp <file> [table] ${o}Esporta in formato json una tabella,query o l'intero database\n${l}csvexp     [table] ${o}Esporta in formato CSV una tabella,query\n${l}expfull...         ${o}Come exp, solo per le tabelle esporta anche la struttura\n${l}md/md5 <pass>      ${o}Restituisce formato md5 (password o altri testi)\n${l}ximp <file>        ${o}Importa il file dati nel formato XLSX (esportato con xexp)\n${l}imp <file>         ${o}Importa il file dati nel formato JSON (exportato con exp)\nAttenzione: La tabella di import deve esistere e i dati vengono completamente sovrascritti\n${l}! <comando...> ;   ${o}esegue il comando SQL senza risultato (chiudere con ${l}!${o})\n${l}!c <comando...> ;  ${o}esegue il comando SQL per creare una tabella (chiudere con ${l}!${o})\n${l}i <table>          ${o}Genera il comando SQL per l'insert sulla tabella\n${l}d <table>          ${o}Genera il comando SQL per il delete sulla tabella\n${l}s,so <table>       ${o}Genera il comando SQL per il select sulla tabella (so=order)\n${l}e <sql>            ${o}Explain Query\n${l}u <table>          ${o}Genera il comando SQL per l'update sulla tabella\n${l}v <table> [cerca]  ${o}Genera il comando SQL per la ricerca FTS5. se impostato cerca torna anche i dati\n${l}.<table>           ${o}Mostra il contenuto della tabella\n${l}!!                 ${o}Apre nano con la clipboard\n${l}q,quit             ${o}Esci\n`);break;case"getip":d();break;case"use":if(L=L.replaceAll(";","")){w(!0)&&h.close(),h=null;try{h=n.db(L),(e=>{for(var t=0;t<j.data.length;t++)if(j.data[t]==e){if(t>0){var r=j.data.splice(t,1);j.data.unshift(r[0]),j.history=[...x.history],x.history.length>50&&(x.history.length=50),a.writeFileSync(k,JSON.stringify(j,null,2))}return}j.data.unshift(e),j.data.length>9&&j.data.pop(),a.writeFileSync(k,JSON.stringify(j,null,2))})(m=L)}catch(se){S.write(`${c}${se}${o}\n`),h=null}}m?S.write(`Database: ${l}${$}${m}${o}\n`):S.write(`No Database in use...${o}\n`);break;case"!!":let re=t.join(r.tmpdir(),".tlite_tmp");var D=(()=>{let e;return e="darwin"==process.platform?s("pbpaste").stdout.toString():s("xsel",["--clipboard","--output"]).stdout.toString(),e})().replaceAll(/^\s*\!\s*\n?/gim,"").replaceAll(/\!\s*$/gim,"");a.writeFileSync(re,D),i(`nano ${re}`,{stdio:"inherit"});let ie=a.readFileSync(re,"utf-8");a.unlinkSync(re),N(ie,/^\s*c\s+\w/gim.test(ie)),_=!1;break;case"md":case"md5":var T=(L=L.replaceAll(";","").trim()).md5();u(`${T||""}`),S.write(`${T||""}\n`);break;case"close":case"chiudi":w()&&(S.write(`closed: ${l}${h.name}${o}\n`),h.close()),h=null;break;case"last":case"db":case"dbs":case"lastdb":if(j.data.length){S.write(`${p}Last used db:${o}\n`);for(var I=0;I<j.data.length;I++)S.write(`${I+1}. ${l}${j.data[I]}${o}\n`);y=!0}break;case"jshort":j.short=parseInt(L)?1:0,a.writeFileSync(k,JSON.stringify(j,null,2));break;case"outdir":L&&(j.outdir="."==L?"":L,a.writeFileSync(k,JSON.stringify(j,null,2))),S.write(`${$}OutDir: ${l}${j.outdir}${o}\n`);break;case"attach":if(w())try{if(L=L.replaceAll(";",""))(Q=L.split(" "))[0]&&h.attach(Q[0],Q[1])?q():S.write(`${c}Errore collegamento: file non trovato${o}\n`);else q()}catch(ne){S.write(`${c}${ne}${o}\n`)}break;case"detach":if(w())try{L=L.replaceAll(";",""),h.detach(L),q()}catch(oe){S.write(`${c}${oe}${o}\n`)}break;case"tabelle":case"tables":if(w())try{var W=h.tabelle();for(var T of(S.write(`${p}Tables: ${l}${h.name}${o}\n`),W)){var M=h.get(`select count(rowid) tot from ${T}`).tot;S.write(`${T} => ${M||0} \n`)}}catch(le){S.write(`${c}${le}${o}\n`)}break;case"campi":case"fields":if(w())try{L=L.replaceAll(";","");W=h.campi(L,"fields"==z);L&&S.write(`${p}Table: ${l}${h.name}.${L}${o}\n`),S.write(JSON.stringify(W,null,2)),S.write("\n")}catch(ce){S.write(`${c}${ce}${o}\n`)}break;case"schema":case"schemad":if(w())try{T=h.schema(L,"schemad"===z);u(`${T} \n`),S.write(`${T}\n`)}catch($e){S.write(`${c}${$e}${o}\n`)}break;case"yaml":if(w())try{L=L.replaceAll(";","");if(L)Q=[L];else var Q=h.tabelle();var C=["#!db"];for(var G of Q){C.push(`\n${G}:`);var X=h.campi(G,!0),P=[];for(var M in X){var B=X[M];B.pr&&P.push(M),C.push(`  ${M}: ${B.t||"v"}`)}P.length&&C.push(`  __pk: ${P.join(",")}`);W=h.all(`select sql from  sqlite_master  where sql>'' and Lower(tbl_name)='${G}' and type='index' order by name`),I=0;for(var T of W){(ae=/\son\s(\w+)\s\((.*?)\)/gim.exec(T.sql))?(C.push(`  __i${I}: ${ae[2]}`),I++):console.log(T.sql)}}var H=C.join("\n");u(`${H} \n`),S.write(`${H}\n`)}catch(pe){S.write(`${c}${pe}${o}\n`)}break;case"xexp":if(w())try{var R=g(Z=f[0]);f.length>1&&(f.splice(0,1),L=f.join(" ")),!async function(e,t,a){const r=await import("xlsx"),i=r.utils.json_to_sheet(e),s=r.utils.book_new();r.utils.book_append_sheet(s,i,t),r.writeFile(s,`${a}.xlsx`,{compression:!0})}(V=h.export(L,!1),Z,R),S.write(`write: ${l}${R}.xlsx${o}\n`)}catch(fe){S.write(`${c}${fe}${o}\n`)}break;case"exp":case"expfull":if(w())try{R=g(f[0])+".json";f.length>1&&(f.splice(0,1),L=f.join(" "));var V=h.export(L,"expfull"===O);if(L)for(var T of V)for(var Y in T){"string"==typeof(ee=T[Y])&&(ee.startsWith("{")||ee.startsWith("["))&&(ee.endsWith("}")||ee.endsWith("]"))&&(T[Y]=JSON.parse(ee))}a.existsSync(R)&&a.unlinkSync(R),a.writeFileSync(R,JSON.stringify(V,null,2)),S.write(`write: ${l}${R}${o}\n`)}catch(ue){S.write(`${c}${ue}${o}\n`)}break;case"csvexp":if(w())try{function de(e){return"number"==typeof e&&(e=""+e),(e.includes("\t")||e.includes("\n")||e.includes('"'))&&(e=`"${e.replace(/"/g,'""')}"`),e}R=g(Z=f[0])+".csv";var K=!1;if(f.length>1&&(f.splice(0,1),L=f.join(" "),K=!0),L){C=[];var U=[];if(K){V=h.export(L);for(var T of V){if(K){for(var Y in C=[],T)C.push(Y);K=!1,U.push(C.join("\t"))}for(var Y in C=[],T)C.push(de(T[Y]||""));U.push(C.join("\t"))}}else{var V=h.export(L,!0);for(var Y in V.flds)C.push(Y);for(var T of(U.push(C.join("\t")),V.data)){for(var Y in C=[],V.flds)C.push(de(T[Y]||""));U.push(C.join("\t"))}}a.existsSync(R)&&a.unlinkSync(R),a.writeFileSync(R,U.join("\n")),S.write(`write: ${l}${R}${o}\n`)}else S.write("must specify a table\n")}catch(he){S.write(`${c}${he}${o}\n`)}break;case"imp":if(w())try{var Z;R=g(Z=f[0])+".json";if(a.existsSync(R)){V=JSON.parse(a.readFileSync(R));if(L)for(var T of V)for(var Y in T){var ee;(ee=T[Y])&&"object"==typeof ee&&(T[Y]=JSON.stringify(ee))}h.import(L,V),S.write(`read: ${l}${R}${o}\n`)}else S.write(`${c}File non Trovato: ${R}${o}\n`)}catch(me){S.write(`${c}${me}${o}\n`)}break;case"ximp":if(w())try{if(L){R=g(L)+".xlsx";if(a.existsSync(R)){V=await xlsimport(R,L);h.import(L,V)}}}catch(be){S.write(`${c}${be}${o}\n`)}break;case"!":case"!c":L.length>1&&(";"==L[L.length-1]||"!"==L[L.length-1])?N(L,"!c"==O):(v="!c"==O,J=!0,b=!0,_=L);break;case"c":N(L,!0);break;case"select":case"insert":case"update":case"delete":case"drop":case"alter":case"create":case"vacuum":case"e":N(O+" "+L,!1);break;case"clip":N("select "+L,!1,!0);break;case"i":case"d":case"s":case"so":case"u":case"v":if(L&&w())try{switch(O){case"d":T=h.strdelete(L);break;case"i":T=h.strinsert(L);break;case"u":T=h.strupdate(L);break;case"so":T=h.strselect(L,!0);break;case"v":L=f.splice(0,1)[0];var te=f.join(" ");T=h.strvirtual(L,te),te&&F(h,T);break;default:T=h.strselect(L)}u(`${T||""}`),S.write(`${T||""}\n`)}catch(ve){S.write(`${c}${ve}${o}\n`)}break;case".":if(w())try{if(!h.esisteTabella(O))throw new Error(`missing table ${O}`);if(T=h.strselect(O,!0),L&&(T=T.split("order by")[0]+" "+L),N(T,!1)){var ae=h.campi(O);process.stdout.write(`${$}rowid,${ae}${o}\n`)}}catch(ye){S.write(`${c}${ye}${o}\n`)}break;case"":case void 0:break;default:S.write(`${c}comando sconosciuto: ${l}${e}${o}\n`)}}},L=process.argv[2];if(L&&/^\s*(ip|getip)\s*$/gim.test(L))d();else if(L&&"backup"==L){!function(e,r){if(e&&a.existsSync(e)){var i=t.parse(e),s=t.join(i.dir,`db_${i.name}`);i.outfile=s,function(e){if(a.existsSync(e)){const r=a.readdirSync(e);for(const i of r){const r=t.join(e,i);a.unlinkSync(r)}}else a.mkdirSync(e)}(i.outfile);var o=(new Date).valueOf();m=e;var l=(h=n.db(e)).schema();a.writeFileSync(t.join(i.outfile,"schema.sql"),l);var c=h.tabelle();if(r)for(var $ of c){var p=`select rowid,${(f=h.campi($)).join(",")} from ${$}`;a.writeFileSync(t.join(i.outfile,`${$}.json`),JSON.stringify(h.all(p),null,1))}else for(var $ of c){var f=h.campi($),u=[],d=["rowid",...f];u.push(d);var b=h.all(`select ${d.join(",")} from ${$}`);for(var v of b){var y=d.reduce(((e,t)=>(e.push(v[t]),e)),[]);u.push(y)}a.writeFileSync(t.join(i.outfile,`${$}.json`),JSON.stringify(u,null,1))}o=(new Date).valueOf()-o,console.log("tempo ms:",o),h.chiudi()}else process.stdout.write("manca il nome del database\n");process.exit(0)}(process.argv[3],process.argv[4]?1:0)}else if(L&&"restore"==L){!function(e){var r=t.parse(e),i=t.join(r.dir,"db_"+r.name);if(a.existsSync(t.join(i,"schema.sql"))){var s=(new Date).valueOf();m=t.join(r.dir,r.name+".db"),a.existsSync(m)&&a.unlinkSync(m),(h=n.db(m)).begin();var o=a.readFileSync(t.join(i,"schema.sql")).toString();h.run(o);var l=h.tabelle();for(var c of l)if(e=t.join(i,c+".json"),a.existsSync(e)){var $=JSON.parse(a.readFileSync(e));if($&&$[0])if(Array.isArray($[0])){var p=$[0],f=[];p.forEach((e=>f.push("?"))),o=`insert into ${c} (${p.join(",")}) values (${f.join(",")}) `;for(var u=h.prepare(o),d=1;d<$.length;d++)u.run(...$[d])}else for(var b of(p=h.campi(c),f=[],p.unshift("rowid"),p.forEach((e=>f.push("?"))),o=`insert into ${c} (${p.join(",")}) values (${f.join(",")}) `,u=h.prepare(o),$)){var v=p.reduce(((e,t)=>(e.push(b[t]),e)),[]);u.run(...v)}}h.commit(),h.chiudi(),s=(new Date).valueOf()-s,console.log("restore tempo ms:",s)}else console.log("manca la cartella di ripristino:",i);process.exit(0)}(process.argv[3])}else!L||a.existsSync(L)?(S.write(`${f} \n${$}SqlLite+FTS5 CLI tool\nDigita ${l}help${o}${$} per maggiori informazioni...  ${o}\n`),L&&a.existsSync(L)?await A(`use ${L}`):await A("db")):(console.log(`${f}\nuso: \n    ${$}tlite ip  #mostra gli indirizzi ip dei server nginx attivi\n    tlite backup <nomedatabase> [fileout]\n    tlite restore <nomedatabase no path> [filedatabase]${o}\n    `),process.exit(0));let z=[],D=[];function T(){z=[],D=[],y?x.setPrompt("[0..9] >"):b?x.setPrompt(""):x.setPrompt("tl> "),x.prompt()}function E(){w()&&h.close(),j.history=[...new Set(x.history.filter((e=>e.trim().length>2)))],x.history.length>50&&(x.history.length=50),a.writeFileSync(k,JSON.stringify(j,null,2)),S.write("bye1..\n"),process.exit(0)}T(),j.history&&(x.history=[...j.history]),x.on("line",(e=>{for(var t of(e=(e||"").split("\n"),x.history.shift(),e)){var a=/\\\s*(\/\/.*|\s*)?$/i.exec(t);a?(D.push(t),z.push(t.slice(0,a.index))):((t.trim()||z.length)&&(z.push(t.trim()),D.push(t)),z.length&&(y||x.history.unshift(D.join("\n")),A(z.join(" ")),T()))}})).on("close",(()=>E()));
