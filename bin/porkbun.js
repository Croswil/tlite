#! /usr/local/bin/node
import o from"node-fetch";import i from"minimist";import e from"fs";import n from"path";import t from"os";const a=t.homedir(),s=n.join(a,".ssh","porkbun.json"),r="[0m",l="[1m",c="[31m",d="[32m",m="[33m",p="[34m";async function $(o,i=!0,e=!0){var n=await z.post(`dns/retrieve/${o}`,{secretapikey:f,apikey:k});if("ERROR"==n.status)throw new Error("ERRORE: "+n.message);var t=e?n.records.filter((o=>"A"==o.type||"CNAME"==o.type)):n.records;return i&&function(o){o.forEach((o=>{console.log(`${r}${o.type} ${d}${(o.name+"                                     ").slice(0,40)}${m}${l} ${o.content}${r}  ${o.ttl}`)}))}(t),t}const b=`${l}${d}porkbun${r} : Manage porkbun DNS \n\n${d}porkbun${c} [list,create,delete] ${r}-d ${p}<dominio>${r} -s ${p}<sottodominio>${r} -i ${p}<indirizzo>${r}   \n\n${l}Options:${r}\n   ${d}-h, --help${r}              mostra l'help\n   ${d}-i,--indirizzo <data>${r}   indirizzo IP\n   ${d}-d,--dominio <data> ${r}    nome del dominio (es. appdelmobile.com)\n   ${d}-s,--subdominio <data> ${r} nome del sottodominio (es. www)\n   ${d}-a,--all <data> ${r}        mostra tutti i record del DB (da usare con list)\n`,g=i(process.argv),u=g._[2],h={dominio:g.d||g.dominio||"",indirizzo:g.i||g.indirizzo||"",subdominio:g.s||g.subdominio||"",all:g.a||g.all};e.existsSync(s)||(console.log(b),console.log(s),console.log(`${r}${c}${l}ERRORE mancano le credenziali: porkbun.json`),process.exit(1));var y=JSON.parse(e.readFileSync(s));const{url:w,secretapikey:f,apikey:k}=y;(h.h||h.help)&&(console.log(b),process.exit(0));const z=new class{constructor(o){this.baseurl=o,this.token=void 0}post(i,e){var n=this;return new Promise(((t,a)=>{!/http[s]*:\/\//.test(i)&&n.baseurl&&(i=n.baseurl+i),o(i,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",body:JSON.stringify(e)}).then((o=>o.json())).then((o=>{t(o)})).catch((o=>{a(o.message)}))}))}}(w);!async function(){try{switch(u){case"list":case"lista":h.dominio?await $(h.dominio,!0,!h.all):console.log("il dominio Ã¨ obbligatorio (parametro -d)");break;case"crea":case"create":h.dominio?h.indirizzo?h.subdominio?await async function(o,i,e){i=(i||"").trim().toLowerCase();var n=o;if(i&&(n=i+"."+o),!e)throw new Error("Missing IP");var t=await $(o,!1);if(0==t.filter((o=>(o.name||"").trim().toLowerCase()==n)).length){var a=await z.post(`dns/create/${o}`,{secretapikey:f,apikey:k,name:"_"==i?"":i,type:"A",content:e,ttl:"600"});console.log(a)}else a=await z.post(`dns/editByNameType/${o}/A/${i}`,{secretapikey:f,apikey:k,content:e,ttl:"600"}),console.log("EDIT",a);t=await $(o)}(h.dominio,h.subdominio,h.indirizzo):console.log("il sottodominio Ã¨ obbligatorio"):console.log("il campo  ip Ã¨ obbligatorio"):console.log("il dominio Ã¨ obbligatorio (parametro -d)");break;case"cancella":case"canc":case"delete":h.dominio?h.subdominio?await async function(o,i){if(!i||!0===i)throw new Error("Posso cancellare solo i sottodomini");i="_"==i?"":i;var e=await z.post(`dns/deleteByNameType/${o}/A/${i}`,{secretapikey:f,apikey:k});console.log(e),await $(o)}(h.dominio,h.subdominio):console.log("il sottodominio Ã¨ obbligatorio"):console.log("il dominio Ã¨ obbligatorio (parametro -d)");break;default:console.log(b),console.log("inserisci un comando dopo `porkbun`:  list,create,delete")}}catch(o){console.log(o.message)}}();
