#!/usr/bin/env node
import e from"fs";import t from"path";import{init as n,B as r}from"liburno_lib";import i from"yaml";import o from"minimist";const{Reset:a,Bold:l,Reverse:s,Red:c,Green:p,Yellow:d,Blue:f,Magenta:v,Cyan:m,White:u}=n(),g=`-------------------------------------------------------------\n${m}${l}tlite-env${a}: utility multiscopo database ${u}(c) Croswil  v. ${d}${l}1.2.21${a}\n-------------------------------------------------------------${a}\n${l}Uso: ${p}tlite-env <flags> ${a}  \n\n${l}flags:${a}\n   ${p}-h, --help${a}              mostra l'help\n   ${p}-m, --mode${a} <modo>       modo sul file .env [public,test,altro]   \n   ${p}-d, --dbapp${a}             Crea il file dbapp   \n   ${p}-r, --route${a}             Crea routing   \n`;var S=o(process.argv);function $(e,t,n,r){var i=0;for(var o of e)t&&t(o,n,i),i++,o.data&&$(o.data,t,o)}(0==S._.length||S.h||S.help)&&(console.log(g),process.exit(0)),n();var y=0;const h=["public","test","altro"];var b=S.m||S.mode;if(b&&h.includes(b))if(e.existsSync(".env")){var j=e.readFileSync(".env").toString().split("\n"),x=h.filter((e=>e!=b)).join("|"),w=new RegExp(`^##\\s*(${x})\\s*$`,"im"),F=[];for(var A of j)/^##\s*/.test(A)&&(y=0),w.test(A)?y=1:A&&A.indexOf("=")>0&&(A=A.replace(/^\s*x_/,""),y&&(A="x_"+A.trim())),F.push(A);e.writeFileSync(".env",F.join("\n")),console.log("ATTIVATO: ",b)}else console.log("file .env not found");else if(S.d||S.dbapp){function oe(t){var n=e.readdirSync(t);n=n.filter((e=>".yaml"==e.slice(-5)));var r=[];for(var o of n){var a=e.readFileSync(`${t}/${o}`).toString();a.startsWith("#!db")&&r.push(a)}r=r.join("\n\n");var l=i.parse(r);for(var o in l){var s=l[o],c=[],p=!1;for(var d in s)if(d&&!d.startsWith("__"))if("rowid"==d||"id"==d)delete s[d];else if(s[d]){var f=s[d].split(","),v=(f[0]||"").toLowerCase().trim();if(f.length>0&&(f[1]||f[2]||f[3])){f[1]||(f[1]=d);var m={cod:"?"==d[0]?d.slice(1):d,des:f[1]};f[2]&&(m.type=f[2]||""),parseInt(f[3])&&(m.visible=!0),1==parseInt(f[3])&&"?"!=d[0]&&(m.sort=!0),p=!0,c.push(m)}"?"!=d[0]?s[d]=v:delete s[d]}p&&(O[o]=c)}return l}const ae="dbdef";e.existsSync(ae)||(console.log("folder dbdef not found"),process.exit(1));var C={},O={};j=e.readdirSync(ae);for(var A of j){var k=`${ae}/${A}`;e.statSync(k).isDirectory()&&(console.log(A),C[A]=oe(k))}console.log("tables"),C.tables=oe(ae),console.log("filtri"),C.filtri=O,e.writeFileSync("dbapp.json",JSON.stringify(C,null,2)),console.log("creato: dbapp.json")}else if(S.r||S.route){var _=new Set;const le="dbdef";var J=`${le}/mappa.tpl`;e.existsSync(J)||(console.log(`file ${J} not found`),process.exit(1));var N=e.existsSync("md")&&e.existsSync("md/menu.json")&&e.existsSync("md/menumain.json"),I=[],L=[],R={};N&&(I=JSON.parse(e.readFileSync("md/menu.json")),L=JSON.parse(e.readFileSync("md/menumain.json")));var T={_root:[""]},W=".";if(e.existsSync(J)){j=e.readFileSync(J).toString().replaceAll("\r","\n").split("\n");for(var B of j){if((A=B.split("//")[0].trim()).length>0)(w=/^\s*\[(\w+)\]\s*$/gim.exec(A))?W=w[1]:(T[W]||(T[W]=[]),T[W].push(A))}}var z=e.readFileSync(`${le}/+page.svelte.tpl`).toString(),D=e.readFileSync(`${le}/+page.js.tpl`).toString();const se="src/routes";var E=[],G=[],U={};for(var B of(r.creaCartella(se),T._root)){var M=((ne=B.split("="))[1]||"").split([","]),V=(A=ne[0].trim(),(M[2]||"").trim().toLowerCase()),Y=V.split(";");for(var q of Y)q&&!U[q]&&(U[q]=1);var H=(M[1]||"").trim().toLowerCase();A&&E.push(`   "${A}" : { level: ${parseInt(M[0])||0}, auth: "${H}" ${V?', doc: "'+V+'"':""} }`);H=M[1];if(N){function pe(e,t,n){var{match:r,auth:n}=ie(t,e.link,n);r&&(e.auth=(n||"").trim(),e.op=1)}$(I,(e=>pe(e,A,H))),$(L,(e=>pe(e,A,H)))}var K=A.split("/").pop()+"/",P=t.join(se,A);r.creaCartella(P);var Q=t.join(P,"+page.svelte"),X=t.join(P,"+page.js"),Z=/\[(\w+)\]/gim.test(A),ee=z,te=D;e.existsSync(Q)||(console.log(Q),ee=(ee=ee.replaceAll("##pat0##",K)).replaceAll("##pat##",A),ee=Z?(ee=ee.replaceAll("##data##","export let data")).replaceAll("##jdata##",'\n                <div class="text-sm mt-5">\n                    <Json value={data} open />\n                </div>'):(ee=ee.replaceAll("##data##","")).replaceAll("##jdata##",""),e.writeFileSync(Q,ee)),Z&&(e.existsSync(X)||e.writeFileSync(X,`${te}`))}for(var B of T._spec){var ne;M=((ne=B.split("="))[1]||"").trim();(A=ne[0].trim())&&M&&G.push(`{ k: "${A}",doc: "${M}" } `)}function ce(n){var r,i=e.readdirSync(n);for(var o of i){var a=t.join(n,o);if(a.endsWith(".svelte"))for(var l=e.readFileSync(t.join(n,o)).toString().replaceAll("\n"," ").toString();;){var s=/<(Bicon|BtnIcon|Icon)\s.*?img="(\w+)"/gim.exec(l);if(!s)break;(r=((r=s[2])||"").trim())&&!_.has(r)&&_.add(r),l=l.substr(s.index+s[0].length)}else{e.statSync(a).isDirectory()&&ce(a)}}}ce("src");var re=[..._];if(re.sort(),console.log("menu",N),N){R={};function de(e){if(e.auth){var t=e.auth,n=t.indexOf(";");n>=0&&(t=t.slice(n+1).trim()),R[t]||(R[t]=e.name||e.des||e.link)}e.op?delete e.op:e.link&&(e.auth="")}$(I,(e=>de(e))),$(L,(e=>de(e))),e.writeFileSync("md/menu.json",JSON.stringify(I,null,2)),e.writeFileSync("md/menumain.json",JSON.stringify(L,null,2)),e.writeFileSync("md/linkmain.json",JSON.stringify(R,null,2))}r.creaCartella("src/lib"),e.writeFileSync("src/lib/abauto.js",`// **** AUTOGENERATO DA parseenv -r : variabili e autorizzazioni per il routing ****\n\nexport const abauto={\n   ${E.join(",\n   ")}\n};\n\nexport const abextra=[\n   ${G.join(",\n   ")}\n]\n    \nexport const dockeys=[\n   "${Object.keys(U).sort().join('",\n   "')}"\n]\n    \nexport const sicons=[\n   "${re.join('",\n   "')}"\n]`)}else console.log(g),console.log("wrong options");function ie(e,t,n){n=n||"";var r=!1;if(e&&t){var i=e.trim().toLowerCase().split("/"),o=t.trim().toLowerCase().split("/");if(i.length==o.length){r=!0;for(var a=1;a<i.length;a++){if(!i[a].startsWith("[")&&i[a]!=o[a]){r=!1;break}n=n.replace("$"+(a-1),o[a])}}}return{match:r,auth:n}}
