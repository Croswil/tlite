#!/usr/bin/env node
import e from"fs";import"path";import n from"sharp";import t from"minimist";const i="[0m",s="[1m",a="[32m";var o=255,r=255,l=255,c=30;const p=`-------------------------------------------------------------\n[36m${s}tlite-manifest${i} : multipourpose utility (c) Croswil 2024 [33m1.2.30${i}\n-------------------------------------------------------------\n${a}${s}Uso:${i}\ntlite-manifest <appname> -m -i <imagefile> -c R,G,B -e [extend]  ${a} Create a manifest.XML and folder for app  ${i}\ntlite-manifest <sitename> -s                                     ${a} Create sitemap.xml e robot.txt${i}\ntlite-manifest <foldername> -w [size] [--delete] [--thumb] [-r]  ${a} convert images in folder to webp (-d) delete original${i} \ntlite-manifest --env=[public,test,altro]                         ${a} modifica il file .env per impostare il modo ${i}\ntlite-manifest --help\n`;var m=t(process.argv);(m.h||m.help)&&(console.log(p),process.exit(0));var g=m;g.manifest||g.m?async function(){var t=m._[2]||"programma";if(g.c||g.colore){var i=(g.c||g.colore).split(",");console.log(i),o=parseInt(i[0]||0),r=parseInt(i[1]||0),l=parseInt(i[2]||0)}(g.estendi||g.e)&&(c=parseInt(g.estendi||g.e||0));var s=g.i||g.image||"image.jpeg";/\.jpe*g$/.test(s)?e.existsSync(s)?(console.log("Creating files"),e.existsSync("icons")||e.mkdirSync("icons"),e.writeFileSync("manifest.json",`\n{\n  "name": "${t}",\n  "short_name": "${t}",\n  "theme_color": "#FFC883",\n  "icons": [\n      {\n        "src": "./icons/16x16.png",\n        "sizes": "16x16",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/32x32.png",\n        "sizes": "32x32",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/60x60.png",\n        "sizes": "60x60",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/76x76.png",\n        "sizes": "76x76",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/120x120.png",\n        "sizes": "120x120",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/152x152.png",\n        "sizes": "152x152",\n        "type": "image/png"\n      },\n      {\n        "src": "./icons/180x180.png",\n        "sizes": "180x180",\n        "type": "image/png"\n      },\n      {\n          "src": "./icons/192x192.png",\n          "sizes": "192x192",\n          "type": "image/png"\n      },\n      {\n          "src": "./icons/512x512.png",\n          "sizes": "512x512",\n          "type": "image/png"\n      },\n      {\n          "src": "./icons/192x192.png",\n          "sizes": "192x192",\n          "type": "image/png",\n          "purpose": "maskable"\n      },\n      {\n          "src": "./icons/512x512.png",\n          "sizes": "512x512",\n          "type": "image/png",\n          "purpose": "maskable"\n      }\n  ],\n  "start_url": ".",\n  "display": "standalone",\n  "background_color": "#000000",\n  "scope": "/",\n  "description": "${t}"\n}\n`),await async function(e){var{data:t,info:i}=await n(e).ensureAlpha(1).trim().extend({top:c,bottom:c,left:c,right:c,background:{r:o,g:r,b:l,alpha:255}}).raw().toBuffer({resolveWithObject:!0});const{width:s,height:a,channels:p}=i,m=new Uint8ClampedArray(t.buffer);for(var g=0;g<m.length;g+=4){var f=m[g],h=m[g+1],$=m[g+2];0==g&&console.log(f,h,$);var d=Math.abs(f-o)+Math.abs(h-r)+Math.abs($-l);m[g+3]=d<255?Math.floor(d/255*255):255}var w=i.width<i.height?i.width:i.height,u=await n(m,{raw:{width:s,height:a,channels:p}}).extract({left:Math.floor((i.width-w)/2),top:Math.floor((i.height-w)/2),width:w,height:w}).png();for(var x of[512,192,180,152,120,76,60,32,16])await u.resize(x).toFile(`icons/${x}x${x}.png`)}(s)):console.log("file immagine mancante (parametro -i)"):console.log("starting file must be JPEG or JPG",s)}():g.env?function(n){var t=0;n=(n||"").trim();const i=["public","test","altro"];if(i.includes(n))if(e.existsSync(".env")){var s=e.readFileSync(".env").toString().split("\n"),a=i.filter((e=>e!=n)).join("|"),o=new RegExp(`^##\\s*(${a})\\s*$`,"im"),r=[];for(var l of s)/^##\s*/.test(l)&&(t=0),o.test(l)?t=1:l&&l.indexOf("=")>0&&(l=l.replace(/^\s*x_/,""),t&&(l="x_"+l.trim())),r.push(l);e.writeFileSync(".env",r.join("\n")),console.log("ATTIVATO: ",n)}else console.log("file .env not found");else console.log("modo non valido",n)}(g.env):g.sitemap||g.s?function(){var n=args?.targets[0];const t="build/client/_app/immutable/components/pages";if(n)if(e.existsSync(t)){var i=[];function p(n,t){if(t.indexOf("_")<0&&!/^login\//.test(t)){i.push(t);var s=e.readdirSync(n);for(var a of s){var o=`${n}/${a}`;e.lstatSync(o).isDirectory()&&p(o,`${t}/${a}`)}}}p(t,""),i=i.sort();var s=new Date,a=s.getDate(),o=s.getMonth()+1,r=`${s.getFullYear()}-${("0"+o).slice(-2)}-${("0"+a).slice(-2)}`,l=[];for(var c of(l.push('<?xml version="1.0" encoding="UTF-8"?>\n<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n'),i))l.push(`   <url>\n      <loc>${n}${c}</loc>\n      <lastmod>${r}</lastmod>\n      <changefreq>monthly</changefreq>\n      <priority>${"/"==c?"1.0":"0.8"}</priority>\n   </url>`);l.push("</urlset>"),e.writeFileSync("sitemap.xml",l.join("\n")),console.log("written: sitemap.xml"),e.writeFileSync("robots.txt",`User-agent: *\nAllow: /\n\nSitemap: ${n}/sitemap.xml`)}else console.log("** unable to create sitemap: missing folder "+t);else console.log("** unable to create sitemap: website name is required")}():g.w||g.webp?async function(){const t=args?.targets;var i=parseInt(g.w||g.webp)||0;async function s(t,s,a){var o=n(`${t}/${s}.${a}`),r=await o.metadata();i>0&&(r.width>i||r.height>i)?r.width>r.height?await o.resize(i).webp({quality:80}).toFile(`${t}/${s}${g.thumb||g.t?"_"+i:""}.webp`):await o.resize(Math.floor(i*r.width/r.height)).webp({quality:80}).toFile(`${t}/${s}${g.thumb||g.t?"_"+i:""}.webp`):await o.webp({quality:80}).toFile(`${t}/${s}.webp`),(g.delete||g.d)&&e.unlinkSync(`${t}/${s}.${a}`),console.log(`${t}/${s}.webp`)}async function a(n){var t=e.readdirSync(n);for(var i of t){var o=`${n}/${i}`;if(e.lstatSync(o).isDirectory()&&(g.r||g.recursive))await a(o);else{var r=/^(.*?)\.(png|jpeg|jpg)$/im.exec(i);r&&await s(n,r[1],r[2])}}}if(t)for(var o of t)await a(o)}():console.log(p);
